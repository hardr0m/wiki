
<h3 class="sectionedit1" id="установка_docker">Установка DOCKER</h3>
<div class="level3">

<p>
sudo apt-get update<br />
sudo apt install apt-transport-https ca-certificates curl software-properties-common<br />
curl -fsSL <a href="https://download.docker.com/linux/ubuntu/gpg" class="urlextern" title="https://download.docker.com/linux/ubuntu/gpg" rel="ugc nofollow">https://download.docker.com/linux/ubuntu/gpg</a> | sudo apt-key add -<br />
sudo add-apt-repository «deb [arch=amd64] <a href="https://download.docker.com/linux/ubuntu" class="urlextern" title="https://download.docker.com/linux/ubuntu" rel="ugc nofollow">https://download.docker.com/linux/ubuntu</a> focal stable»<br />
sudo apt install docker-ce docker-ce-cli containerd.io docker-compose-plugin
</p>

<p>
Просмотр запущенных контейнеров:
</p>
<pre class="code">docker ps</pre>

<p>
Просмотр всех имеющихся контейнеров:
</p>
<pre class="code">docker ps -a</pre>

<p>
Копировать из контейнера на хост
</p>
<pre class="code">docker cp 741cc18d959e:/usr/share/elasticsearch/config /disk1</pre>

<p>
Если вы хотите скопировать файлы из вашей хост-системы в контейнер, вы должны использовать команду docker cp, например:
</p>
<pre class="code">docker cp host_source_path container:destination_path</pre>

<p>
Копировать файлы и каталоги с оригинальными атрибутами<br />
Вы можете использовать режим архива при копировании с опцией -a. При этом вы можете скопировать все права доступа к файлу, UID и GID исходного файла.
</p>
<pre class="code">docker cp -a host_source_path container:destination_path
docker cp -a container:source_path host_destination_path</pre>

<p>
Посмотреть логи
</p>
<pre class="code">docker logs -f &lt;имя контейнера или ID&gt;   #просмотр логов в реальном времени</pre>

<p>
Зайти в контейнер
</p>
<pre class="code">docker exec -it - -user root &lt;имя или ID контейнера&gt; bash   #зайти под определенным пользователем  
docker exec -ti имя  контейнера bash</pre>

<p>
Удалить все остановленные контейнеры
</p>
<pre class="code">docker system prune </pre>

<p>
Чтобы удалить все остановленные контейнеры и неиспользуемые образы
</p>
<pre class="code">docker system prune -a</pre>

<p>
Удалить все контейнеры с томами
</p>
<pre class="code">docker rm -vf $(docker ps -aq)</pre>

<p>
Удалить все образы
</p>
<pre class="code">docker rmi -f $(docker images -aq)</pre>

<p>
Для Winodows Powershell и Command Line
</p>
<pre class="code">docker images -a -q | % { docker image rm $_ -f }
for /F %i in (&#039;docker images -a -q&#039;) do docker rmi -f %i</pre>

<p>
Нагрузочное тестирование
</p>
<pre class="code">docker run -it --rm ddosify/ddosify ddosify -t http://10.10.5.150 -l incremental -d 45 -n 1000000 </pre>

</div>
